#noaakey
# names(IRC_precip)
# head(IRC_precip)
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
# countyweather Package
# 2017 Precip Daily Averaged
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = Sys.Date() - 1, var = "prcp")
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
station_ids <- rnoaa::ncdc_stations(datasetid = "GHCND", locationid = "FIPS:12061", limit = 10)
station_df <- station_ids$data
station_df
date_max <- lubridate::ymd("2017-01-31")
date_min <- lubridate::ymd("2017-01-01")
tot_df <- dplyr::mutate_(station_df, mindate = ~lubridate::ymd(mindate), maxdate = ~lubridate::ymd(maxdate)) %>% dplyr::filter_(~maxdate >= date_min & mindate <= date_max) %>% dplyr::select_(.dots = c("id", "latitude", "longitude", "name")) %>% dplyr::mutate_(id = ~gsub("GHCND:", "", id))
library("dplyr", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
tot_df <- dplyr::mutate_(station_df, mindate = ~lubridate::ymd(mindate), maxdate = ~lubridate::ymd(maxdate)) %>% dplyr::filter_(~maxdate >= date_min & mindate <= date_max) %>% dplyr::select_(.dots = c("id", "latitude", "longitude", "name")) %>% dplyr::mutate_(id = ~gsub("GHCND:", "", id))
tot_df
stations <- tot_df
meteo_df <- rnoaa::meteo_pull_monitors(stations = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("var"all""))$result
meteo_df <- rnoaa::meteo_pull_monitors(stations = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("all"))$result
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("all"))$result
library("rnoaa", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("all"))$result
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("all"), coverage = NULL, average_dat=TRUE)$result
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("all"))$result
library('plyr')
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("plyr", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
library("dplyr", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
ncdc_stations(datasetid='GHCND', locationid='FIPS:12061', stationid='GHCND:US1FLIR0006')
out <- ncdc(datasetid='GHCND', stationid='GHCND:US1FLIR0006', datatypeid='PRCP', startdate = '2017-01-01', enddate = '2017-01-31')
out
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("prcp"))$result
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("prcp"))
stations$id
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id[1,], keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("prcp"))
stations$id[,1]
stations$id[1]
meteo_df <- rnoaa::meteo_pull_monitors(monitors = stations$id[1], keep_flags = FALSE, date_min = date_min, date_max = date_max, var = toupper("prcp"))
monitors <- unique(stations$id)
monitors
safe_meteo_tidy_ghcnd <- purrr::safely(meteo_tidy_ghcnd)
all_monitors_clean <- lapply(monitors, safe_meteo_tidy_ghcnd,
keep_flags = FALSE, date_min = date_min,
date_max = date_max, var = "prcp")
all_monitors_clean
monitors
safe_meteo_tidy_ghcnd
date_min
date_max
remove.packages("rnoaa")
install.packages("rnoaa")
View(safe_meteo_tidy_ghcnd)
View(safe_meteo_tidy_ghcnd)
trace(purrr::safely)
untrace(purrr::safely)
?purrr::safely
safe_meteo_tidy_ghcnd <- purrr::safely(meteo_tidy_ghcnd)
library("rnoaa", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
safe_meteo_tidy_ghcnd <- purrr::safely(meteo_tidy_ghcnd)
all_monitors_clean <- lapply(monitors, safe_meteo_tidy_ghcnd,
+                              keep_flags = FALSE, date_min = date_min,
+                              date_max = date_max, var = "prcp")
all_monitors_clean <- lapply(monitors, safe_meteo_tidy_ghcnd, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = "prcp")
all_monitors_clean
check_station <- sapply(all_monitors_clean, function(x) is.null(x$result))
check_station
bad_stations <- monitors[check_station]
bad_stations
monitors <- c("ASN00003003", "ASM00094299", "US1FLIR0006", "US1FLIR0015")
monitors <- unique(monitors)
monitors
safe_meteo_tidy_ghcnd <- purrr::safely(meteo_tidy_ghcnd)
all_monitors_clean <- lapply(monitors, safe_meteo_tidy_ghcnd, keep_flags = FALSE, date_min = date_min, date_max = date_max, var = "prcp")
all_monitors_clean
meteo_df
tot_df
station_df
dat <- ghcnd_search(stationid = stationid, var = var, date_min = date_min, date_max = date_max) %>% lapply(meteo_tidy_ghcnd_element, keep_flags = keep_flags)
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(meteo_tidy_ghcnd_element, keep_flags = keep_flags)
monitors[1]
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoa::meteo_tidy_ghcnd_element, keep_flags = keep_flags)
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoaa::meteo_tidy_ghcnd_element, keep_flags = keep_flags)
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoa:::meteo_tidy_ghcnd_element, keep_flags = keep_flags)
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoaa:::meteo_tidy_ghcnd_element, keep_flags = keep_flags)
dat <- ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoaa:::meteo_tidy_ghcnd_element, keep_flags = FALSE)
cleaned_df <- do.call(rbind.data.frame, dat) %>% tidyr::spread_("key", "value")
cleaned_df
which_vars_to_clean <-
which(colnames(cleaned_df) %in%
c("prcp", "tmax", "tmin", "tavg", "snow", "snwd"))
cleaned_df <- dplyr::tbl_df(cleaned_df)
cleaned_df[, which_vars_to_clean] <-
vapply(cleaned_df[ , which_vars_to_clean],
FUN.VALUE = numeric(nrow(cleaned_df)),
FUN = function(x){
x <- ifelse(x == -9999, NA, x)
x <- as.numeric(x)
})
cleaned_df
dat <- ghcnd_search(stationid = monitors[3], var = "prcp", date_min = date_min, date_max = date_max) %>% lapply(rnoaa:::meteo_tidy_ghcnd_element, keep_flags = FALSE)
dat
ghcnd_search(stationid = monitors[3], var = "prcp", date_min = date_min, date_max = date_max)
ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max)
monitors[3]
monitors
monitors <- c("US1FLIR0001", "US1FLIR0002", "US1FLIR0015", "US1FLIR0018")
ghcnd_search(stationid = monitors[1], var = "prcp", date_min = date_min, date_max = date_max)
ghcnd_search(stationid = monitors[2], var = "prcp", date_min = date_min, date_max = date_max)
ghcnd_search(stationid = monitors[1], var = "tmp", date_min = date_min, date_max = date_max)
ghcnd_search(stationid = monitors[3], var = "prcp", date_min = date_min, date_max = date_max)
ghcnd_search(stationid = monitors[4], var = "prcp", date_min = date_min, date_max = date_max)
#install.packages("countyweather")
options("noaakey" = "eNCBbAkotcjkFoISmIiihlnDBTHYaDWM")
#noaakey
# names(IRC_precip)
# head(IRC_precip)
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
library("countyweather")
# countyweather Package
# 2017 Precip Daily Averaged
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "all")
daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "all")
daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
countywetaher::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather
countyweather:::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = c("tmin", "tmax", "prcp"))
IRC_precip <- daily_fips(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31", var = c("tmin", "tmax", "prcp"))
countyweather::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather:::daily_stationmap("12061", countyweather::daily_df(countyweather:::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")), point_color = "firebrick", point_size = 2, station_label = TRUE)
countyweather:::daily_stationmap("12061", countyweather:::daily_df(countyweather:::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")), point_color = "firebrick", point_size = 2, station_label = TRUE)
countyweather:::daily_stationmap("12127", countyweather:::daily_df(countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31")), point_color = "firebrick", point_size = 2, station_label = TRUE)
countyweather:::daily_df(countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31"))
countyweather:::daily_df(countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31"), average_data = TRUE)
ghcnd_search(stationid = "US1FLVL0001", var = "all", date_min = "2017-01-01", date_max = "2017-01-31"))
ghcnd_search(stationid = "US1FLVL0001", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLVL0001", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = " US1FLIR0006", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = " US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = c("tmin", "tmax", "prcp"), date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "prcp", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "prcp", date_min = "2016-01-01", date_max = "2016-12-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "prcp", date_min = "2016-01-01", date_max = "2016-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "prcp", date_min = "2016-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0006", var = "prcp", date_min = Sys.Date() - 365, date_max = Sys.Date() - 1)
IRC_precip <- daily_fips(fips = "12127", date_min = "2016-02-01", date_max = "2017-01-31", var = "prcp")
IRC_precip <- daily_fips(fips = "12061", date_min = "2016-02-01", date_max = "2017-01-31", var = "prcp")
IRC_precip <- daily_fips(fips = "12061", date_min = Sys.Date() - 30, date_max = Sys.Date() - 1, var = "prcp")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather:::daily_stations(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31")
daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
countyweather::daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
countyweather:::daily_df(countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31"), average_data = TRUE)
countyweather:::daily_df(countyweather:::daily_stations(fips = "12127", date_min = "2017-01-01", date_max = "2017-01-31"), average_data = FALSE)
ghcnd_search(stationid = "US1FLVL0001", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLVL0001", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = " US1FLIR0006", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
IRC_precip <- daily_fips(fips = "12061", date_min = "2016-02-01", date_max = "2017-01-31", var = "prcp")
library("countyweather")
IRC_precip <- daily_fips(fips = "12061", date_min = "2016-02-01", date_max = "2017-01-31", var = "prcp")
IRC_precip
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
$snow
test<-rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
test
test<-rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
test
test<-rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
test<-rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
test
trace(rnoaa::ghcnd_search, edit=TRUE)
test<-rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-60, date_max = "2017-01-31")
test
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = "2017-01-31")
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp")
IRC_precip <- daily_fips(fips = "12061", date_min = Sys.Date()-90, date_max = Sys.Date()-1, var = "prcp")
ggplot(IRC_precip$daily_data, aes(x = date, y = prcp, color = prcp_reporting)) +
geom_line() + geom_point() + theme_minimal() +
xlab("2017") + ylab("Daily rainfall (mm)") +
scale_color_continuous(name = "# stations\nreporting")
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
ggplot(IRC_precip$daily_data, aes(x = date, y = prcp, color = prcp_reporting)) +
geom_line() + geom_point() + theme_minimal() +
xlab("2017") + ylab("Daily rainfall (mm)") +
scale_color_continuous(name = "# stations\nreporting")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
options("noaakey" = "eNCBbAkotcjkFoISmIiihlnDBTHYaDWM")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = "2017-01-01", date_max = "2017-01-31")
sessionInfo()
options("noaakey" = "eNCBbAkotcjkFoISmIiihlnDBTHYaDWM")
#noaakey
# names(IRC_precip)
# head(IRC_precip)
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
library("countyweather")
sessionInfo()
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = "2017-01-31")
sessionInfo()
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = "2017-01-31")
sessionInfo()
library("base64enc", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
install.packages("viridisLite")
install.packages("htmlwidgets")
install.packages("plotly")
install.packages("assertthat")
session
sessionInfo()
library("base64enc", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
library("assertthat", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
library("viridisLite", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
library("plotly", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
library("htmlwidgets", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
sessionInfo()
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = "2017-01-31")
Sys.Date()-90
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = Sys.Date()-30)
library("rnoaa", lib.loc="C:/Users/gkross/ownCloud/CountyWeather/packrat/lib/x86_64-w64-mingw32/3.3.2")
rnoaa::ghcnd_search(stationid = "US1FLIR0015", var = "all", date_min = Sys.Date()-90, date_max = Sys.Date()-30)
packrat::disable()
#install.packages("countyweather")
options("noaakey" = "eNCBbAkotcjkFoISmIiihlnDBTHYaDWM")
#noaakey
# names(IRC_precip)
# Vero Beach Lat Long: 27.638643, -80.397270
# head(IRC_precip)
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
library("countyweather")
library("weathermetrics")
library("metScanR")
# metScanr Package
scenario1 <- siteFinder(Lat=27.638643,Lon=-80.397270,radius=45)
mapSiteFinder(scenario1)
# countyweather Package
# 2017 Precip Daily Averaged
IRC_precip <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = Sys.Date()-1, var = "prcp")
ggplot(IRC_precip$daily_data, aes(x = date, y = prcp, color = prcp_reporting)) +
geom_line() + geom_point() + theme_minimal() +
xlab("2017") + ylab("Daily rainfall (mm)") +
scale_color_continuous(name = "# stations\nreporting")
# 2017 Precip Daily by Station
IRC_precip_by_Station <- daily_fips(fips = "12061", date_min = "2017-01-01", date_max = "2017-01-31", var = "prcp", average_data = FALSE, station_label = TRUE)
ggplot(IRC_precip_by_Station$daily_data, aes(x = date, y = prcp, color = id)) +
geom_line() + theme_minimal() +
xlab("2017") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
IRC_precip_by_Station$station_map
# 2016 Precip Averaged
IRC_precip_2016 <- daily_fips(fips = "12061", date_min = "2016-01-01", date_max = "2016-12-31", var = "prcp")
ggplot(IRC_precip_2016$daily_data, aes(x = date, y = convert_precip(prcp, "mm", "inches", round = 2), color = prcp_reporting)) +
geom_line() + geom_point() + theme_minimal() +
xlab("2016") + ylab("Daily rainfall (Inches)") +
scale_color_continuous(name = "# stations\nreporting")
tp=IRC_precip_2016$daily_data %>%
arrange(date)  %>%
mutate(prcp.30 = rollsum(x = prcp, 30, align = "right", fill = NA))
ggplot(tp,aes(x = date, y = prcp))+
geom_line(aes(y=prcp.30),col="black")+
geom_line(col="red")
# 2016 Precip Daily by Station
IRC_precip_by_Station_2016 <- daily_fips(fips = "12061", date_min = "2016-01-01", date_max = "2016-12-31", var = "prcp", average_data = FALSE, station_label = TRUE)
ggplot(IRC_precip_by_Station_2016$daily_data, aes(x = date, y = prcp, color = id)) +
geom_line() + theme_minimal() +
xlab("2016") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
IRC_precip_by_Station_2016$station_map
# 2016 Temp Averaged
IRC_temp_2016 <- daily_fips(fips = "12061", date_min = "2016-01-01", date_max = "2016-12-31", var = c("tmin", "tmax"))
ggplot(IRC_temp_2016$daily_data,
aes(x = date, ymax = tmax, ymin = tmin))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=(tmax+tmin)/2),col="red")
# 2014 Volusia Precip Daily by Station
Vol_precip_by_Station_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var = "prcp", average_data = FALSE, station_label = TRUE)
ggplot(Vol_precip_by_Station_2014$daily_data, aes(x = date, y = prcp, color = id)) +
geom_line() + theme_minimal() +
xlab("2014") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
Vol_precip_by_Station_2014$station_map
# 2014 Volusia Temperature Daily by Station
Vol_temp_by_Station_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var=c("tmin", "tmax"),average_data = FALSE, station_label = TRUE)
ggplot(Vol_temp_by_Station_2014$daily_data, aes(x = date, y = tmax, color = id)) +
geom_line() + theme_minimal() +
xlab("2014") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
Vol_precip_by_Station_2014$station_map
# 2014 Vol Temp Averaged
Vol_temp_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var = c("tmin", "tmax"))
ggplot(Vol_temp_2014$daily_data,
aes(x = date, ymax = tmax, ymin = tmin))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=(tmax+tmin)/2),col="red")
Vol_temp_2014$daily_data$tmean<- (Vol_temp_2014$daily_data$tmax+Vol_temp_2014$daily_data$tmin)/2
Vol_temp_2014$daily_data$tmeanF<- convert_temperature(Vol_temp_2014$daily_data$tmean, "c", "f")
Vol_temp_2014$daily_data$tminF<- convert_temperature(Vol_temp_2014$daily_data$tmin, "c", "f")
Vol_temp_2014$daily_data$tmaxF<- convert_temperature(Vol_temp_2014$daily_data$tmax, "c", "f")
r <- with(with(Vol_temp_2014$daily_data, rle(tmeanF<=60.0)),rep(lengths,lengths))
Vol_temp_2014$daily_data$cold.wave <- with(Vol_temp_2014$daily_data,tmeanF<=60.0) & (r>2)
r <- with(with(Vol_temp_2014$daily_data, rle(tminF<=60.0)),rep(lengths,lengths))
Vol_temp_2014$daily_data$cold.min <- with(Vol_temp_2014$daily_data,tminF<=60.0) & (r>2)
ggplot(Vol_temp_2014$daily_data, aes(x = date, ymax = tmaxF, ymin = tminF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=tmeanF,col="Mean Temp"))+
geom_point(data=Vol_temp_2014$daily_data[Vol_temp_2014$daily_data$cold.wave,], aes(x = date, y = tmeanF, col = "Mean Temp < 60 x 3"))+
geom_point(data=Vol_temp_2014$daily_data[Vol_temp_2014$daily_data$cold.min,], aes(x =date, y = tminF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_date(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Volusia", x="Week", y="Temp F")+
ggtitle("Voluisia 2014")
# weatherData Package
# MLB Weather from weatherdata package
#mlb_wx <- getWeatherForYear("MLB", 2016, opt_detailed=FALSE)
library(weatherData)
mlb_wx <- getWeatherForDate("MLB", start_date="2016-01-01", end_date = "2016-12-31", opt_all_columns=TRUE)
r <- with(with(mlb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
mlb_wx$cold.wave <- with(mlb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(mlb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
mlb_wx$cold.min <- with(mlb_wx,Min_TemperatureF<=60.0) & (r>2)
ggplot(mlb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=mlb_wx[mlb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=mlb_wx[mlb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Melbourne", x="Week", y="Temp F")+
ggtitle("Melbourne 2016")
# New Smyrna 2014
evb_wx <- getWeatherForDate("EVB", start_date="2014-01-01", end_date = "2014-12-31", opt_all_columns=TRUE)
r <- with(with(evb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
evb_wx$cold.wave <- with(evb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(evb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
evb_wx$cold.min <- with(evb_wx,Min_TemperatureF<=60.0) & (r>2)
ggplot(evb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=evb_wx[evb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=evb_wx[evb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "New Smyrna 2014", x="Week", y="Temp F")+
ggtitle("New Smyrna 2014")
# Daytona Beach 2014
dab_wx <- getWeatherForDate("DAB", start_date="2014-01-01", end_date = "2014-12-31", opt_all_columns=TRUE)
r <- with(with(dab_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
dab_wx$cold.wave <- with(dab_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(dab_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
dab_wx$cold.min <- with(dab_wx,Min_TemperatureF<=60.0) & (r>2)
ggplot(dab_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=dab_wx[dab_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=dab_wx[dab_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Daytona Beach 2014", x="Week", y="Temp F")+
ggtitle("Daytona Beach 2014")
# VRB Weather from weatherdata package
library(weatherData)
vrb_wx <- getWeatherForDate("VRB", start_date="2016-01-01", end_date = "2016-12-31", opt_all_columns=TRUE)
r <- with(with(vrb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.wave <- with(vrb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(vrb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.min <- with(vrb_wx,Min_TemperatureF<=60.0) & (r>2)
ggplot(vrb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=vrb_wx[vrb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=vrb_wx[vrb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Vero Beach", x="Week", y="Temp F")+
ggtitle("Vero Beach 2016")
vrb_wx <- getWeatherForDate("VRB", start_date="2017-01-01", end_date = Sys.Date() - 1, opt_all_columns=TRUE)
r <- with(with(vrb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.wave <- with(vrb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(vrb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.min <- with(vrb_wx,Min_TemperatureF<=60.0) & (r>2)
lims <- as.POSIXct(strptime(c("2017-01-01 03:00","2017-12-31 16:00"), format = "%Y-%m-%d %H:%M"))
ggplot(vrb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=vrb_wx[vrb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=vrb_wx[vrb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"), limits = lims)+
scale_y_continuous(limits = c(30,100))+
labs(title = "Vero Beach", x="Week", y="Temp F")+
ggtitle("Vero Beach 2017")
plot_ly(vrb_wx, x = as.POSIXct.Date(vrb_wx$Date), y = vrb_wx$Mean_TemperatureF, type = 'scatter', mode = 'lines')
vrb_wx
vrb_wx <- getWeatherForDate("VRB", start_date=Sys.Date() - 91, end_date = Sys.Date() - 1, opt_all_columns=TRUE)
r <- with(with(vrb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.wave <- with(vrb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(vrb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
vrb_wx$cold.min <- with(vrb_wx,Min_TemperatureF<=60.0) & (r>2)
lims <- as.POSIXct(strptime(c(Sys.Date() - 91, Sys.Date() - 1), format = "%Y-%m-%d %H:%M"))
ggplot(vrb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=vrb_wx[vrb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=vrb_wx[vrb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
geom_vline(xintercept = as.numeric(as.Date("2016-12-31")), linetype=4) +
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"), limits = lims)+
scale_y_continuous(limits = c(30,100))+
labs(title = "Vero Beach", x="Week", y="Temp F")+
ggtitle("Vero Beach last 90 Days")
Vol_precip_by_Station_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var = "prcp", average_data = FALSE, station_label = TRUE)
ggplot(Vol_precip_by_Station_2014$daily_data, aes(x = date, y = prcp, color = id)) +
geom_line() + theme_minimal() +
xlab("2014") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
Vol_precip_by_Station_2014$station_map
# 2014 Volusia Temperature Daily by Station
Vol_temp_by_Station_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var=c("tmin", "tmax"),average_data = FALSE, station_label = TRUE)
ggplot(Vol_temp_by_Station_2014$daily_data, aes(x = date, y = tmax, color = id)) +
geom_line() + theme_minimal() +
xlab("2014") + ylab("Daily rainfall (mm)") + facet_wrap(~id)
Vol_precip_by_Station_2014$station_map
# 2014 Vol Temp Averaged
Vol_temp_2014 <- daily_fips(fips = "12127", date_min = "2014-01-01", date_max = "2014-12-31", var = c("tmin", "tmax"))
ggplot(Vol_temp_2014$daily_data,
aes(x = date, ymax = tmax, ymin = tmin))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=(tmax+tmin)/2),col="red")
Vol_temp_2014$daily_data$tmean<- (Vol_temp_2014$daily_data$tmax+Vol_temp_2014$daily_data$tmin)/2
Vol_temp_2014$daily_data$tmeanF<- convert_temperature(Vol_temp_2014$daily_data$tmean, "c", "f")
Vol_temp_2014$daily_data$tminF<- convert_temperature(Vol_temp_2014$daily_data$tmin, "c", "f")
Vol_temp_2014$daily_data$tmaxF<- convert_temperature(Vol_temp_2014$daily_data$tmax, "c", "f")
r <- with(with(Vol_temp_2014$daily_data, rle(tmeanF<=60.0)),rep(lengths,lengths))
Vol_temp_2014$daily_data$cold.wave <- with(Vol_temp_2014$daily_data,tmeanF<=60.0) & (r>2)
r <- with(with(Vol_temp_2014$daily_data, rle(tminF<=60.0)),rep(lengths,lengths))
Vol_temp_2014$daily_data$cold.min <- with(Vol_temp_2014$daily_data,tminF<=60.0) & (r>2)
ggplot(Vol_temp_2014$daily_data, aes(x = date, ymax = tmaxF, ymin = tminF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=tmeanF,col="Mean Temp"))+
geom_point(data=Vol_temp_2014$daily_data[Vol_temp_2014$daily_data$cold.wave,], aes(x = date, y = tmeanF, col = "Mean Temp < 60 x 3"))+
geom_point(data=Vol_temp_2014$daily_data[Vol_temp_2014$daily_data$cold.min,], aes(x =date, y = tminF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_date(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Volusia", x="Week", y="Temp F")+
ggtitle("Voluisia 2014")
library(weatherData)
mlb_wx <- getWeatherForDate("MLB", start_date="2016-01-01", end_date = "2016-12-31", opt_all_columns=TRUE)
r <- with(with(mlb_wx, rle(Mean_TemperatureF<=60.0)),rep(lengths,lengths))
mlb_wx$cold.wave <- with(mlb_wx,Mean_TemperatureF<=60.0) & (r>2)
r <- with(with(mlb_wx, rle(Min_TemperatureF<=60.0)),rep(lengths,lengths))
mlb_wx$cold.min <- with(mlb_wx,Min_TemperatureF<=60.0) & (r>2)
ggplot(mlb_wx, aes(x = Date, ymax = Max_TemperatureF, ymin = Min_TemperatureF))+
geom_ribbon(col="grey",fill="grey")+
geom_line(aes(y=Mean_TemperatureF,col="Mean Temp"))+
geom_point(data=mlb_wx[mlb_wx$cold.wave,], aes(x = Date, y = Mean_TemperatureF, col = "Mean Temp < 60 x 3"))+
geom_point(data=mlb_wx[mlb_wx$cold.min,], aes(x = Date, y = Min_TemperatureF, col = "Min Temp < 60 x 3"))+
geom_hline(yintercept=60,color="black")+
scale_x_datetime(date_breaks = "1 week", date_labels = "%W", labels=date_format("%Y %H:%M"))+
scale_y_continuous(limits = c(30,100))+
labs(title = "Melbourne", x="Week", y="Temp F")+
ggtitle("Melbourne 2016")
library("ggplot2")
library("dplyr")
library("zoo")
library("weatherData")
library("countyweather")
library("weathermetrics")
library("metScanR")
# metScanr Package
scenario1 <- siteFinder(Lat=27.638643,Lon=-80.397270,radius=45)
mapSiteFinder(scenario1)
scenario1
mapSiteFinder(scenario1)
mapSiteFinder(scenario1)
data(NEON_masterTraceability)
data
test<-data(NEON_masterTraceability)
test
NEON_masterTraceability
